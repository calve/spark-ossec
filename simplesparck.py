from pyspark import SparkContext
from alert import Alert


def paragraphFile(sc, path):
    """A custom reader to parse as paragraph"""
    return sc.newAPIHadoopFile(path, "org.apache.hadoop.mapreduce.lib.input.TextInputFormat",
                               "org.apache.hadoop.io.LongWritable", "org.apache.hadoop.io.Text",
                               conf={"textinputformat.record.delimiter": "\n\n"}).map(lambda num_line:num_line[1])


def count_in_list(alerts):
    """
    Returns a dict counting each alert in the list
    Returns {alert: count, alert: count}
    """
    res = {}
    for alert in alerts:
        index = alert.rule_id
        if index in res:
            res[index] += 1
        else:
            res[index] = 1
    return res

logFile = "file:///userdata/alerts.log"  # Should be some file on your system
sc = SparkContext("local", "Simple App")
alerts = paragraphFile(sc, logFile)
alerts = alerts.map(lambda s: Alert(s))

# Count how much alerts have been raised for each ip
src_ip_counts = (alerts.filter(lambda alert: alert.src_ip is not None)  # alerts with a src ip
                       .map(lambda alert: (alert.src_ip, 1))
                       .reduceByKey(lambda a, b: a+b)
                       .collect())

# Find all rules id generated by each ips
alerts_by_ips = (alerts.filter(lambda alert: alert.src_ip is not None)  # alerts with a src ip
                       .map(lambda alert: (alert.src_ip, [alert]))  # Associate ips with a list of rules
                       .reduceByKey(lambda a, b: a+b)
                       .map(lambda alert: (alert, count_in_list(alert[1]))))  # Count each rule occurence


def mapper(item):
    # Find the most generated alert
    src_ip, alerts = item
    res = []
    for alert, count in alerts.iteritems():
        res.append(((alert, src_ip), count))
    return res

most_generated = alerts_by_ips.flatMap(mapper).filter(lambda x: x[1] > 200)
# #suspiscious_ips = rules_by_ips.filter(lambda x: len(x[1]) > 1).collect()

print(most_generated.collect())
print("Read {0} alerts".format(alerts.count()))
